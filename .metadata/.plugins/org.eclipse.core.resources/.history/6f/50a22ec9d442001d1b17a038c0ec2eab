/*
 * mpu6050.c
 *
 *  Created on: 30-Sep-2022
 *      Author: Sanjay
 */

#include "mpu6050.h"
#include "main.h"

//*********Private Defines************/

#define	TRUE	1
#define	FALSE	0


/*
 * Mpu6050 register Addresses
 */

#define	CONFIG			0X1A
#define	GYRO_CONFIG		0X1B
#define	ACCEL_CONFIG	0X1C
#define	FIFO_EN			0X23
#define	INT_ENABLE		0X38
#define	INT_STATUS		0X3A
#define	ACCEL_XOUT_H	0X3B
#define	ACCEL_XOUT_L	0X3C
#define	ACCEL_YOUT_H	0X3D
#define	ACCEL_YOUT_L	0X3E
#define	ACCEL_ZOUT_H	0X3F
#define	ACCEL_ZOUT_L	0X40
#define	TEMP_OUT_H		0X41
#define	TEMP_OUT_L		0X42
#define	GYRO_XOUT_H		0X43
#define	GYRO_XOUT_L		0X44
#define	GYRO_YOUT_H		0X45
#define	GYRO_YOUT_L		0X46
#define	GYRO_ZOUT_H		0X47
#define	GYRO_ZOUT_L		0X48
#define	USER_CTRL		0X6A
#define	PWR_MGMT_1		0X6B
#define	FIFO_COUNTH		0X72
#define	FIFO_COUNTL		0X73
#define	FIFO_R_W		0X74
#define	WHO_AM_I		0X75


//*********Private Functions**********//
void enableTempFIFO(void);
void enableAccFIFO(void);
void enableGyroFIFO(void);
void enableTAGFIFO(void);
uint16_t getFIFO_Count(void);
uint8_t readFIFO(void);
void resetFIFO(void);
uint8_t checkdataready(void);


float getTemperatureFIFO(mpu6050_t	*mpu6050){
	if(mpu6050->enableFIFO==FIFO_TEMP){
		enableTempFIFO();

		uint16_t data[2];

	}
	else{
		return HAL_ERROR;
	}
}










void enableTempFIFO(void){
	uint8_t data=0;
	data=(1<<7);
	HAL_I2C_Mem_Write(hi2c, MPU6050ADDR, FIFO_EN, 1, &data, 1, HAL_MAX_DELAY);
}

void enableGyroFIFO(void){
	uint8_t data=0;
	data=(7<<4);
	HAL_I2C_Mem_Write(hi2c, MPU6050ADDR, FIFO_EN, 1, &data, 1, HAL_MAX_DELAY);
}

void enableAccFIFO(void){
	uint8_t data=0;
	data=(1<<3);
	HAL_I2C_Mem_Write(hi2c, MPU6050ADDR, FIFO_EN, 1, &data, 1, HAL_MAX_DELAY);
}


//Enable  Fifo for Acc,Grro and Temp
void enableTAGFIFO(void){
	uint8_t data=0;
	data=(31<3);
	HAL_I2C_Mem_Write(hi2c, MPU6050ADDR, FIFO_EN, 1, &data, 1, HAL_MAX_DELAY);
}


uint8_t checkdataready(void){
	uint8_t dataready=0;
	HAL_I2C_Mem_Read(hi2c, MPU6050ADDR, INT_STATUS, 1, &dataready, 1, HAL_MAX_DELAY);
	dataready=dataready&0X01;
	if(dataready==1){
		return TRUE;
	}
	else{
		return FALSE;
	}
}

uint8_t readFIFO(void){
	if(checkdataready()){
		uint8_t data=0;
		HAL_I2C_Mem_Read(hi2c, MPU6050ADDR, FIFO_R_W, 1, &data, 1, HAL_MAX_DELAY);
		return	data;
	}
	else{
		return HAL_ERROR;
	}
}

uint16_t getFIFO_Count(void){
	uint8_t countdata[2];
	HAL_I2C_Mem_Read(hi2c, MPU6050ADDR, FIFO_COUNTH, 1, &countdata, 2, HAL_MAX_DELAY);
	return	(((uint16_t)countdata[0])<<8)|countdata[1];
}
